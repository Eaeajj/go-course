package main

import (
	"fmt"
	"time"
)

// Ответ:
// 1. Объяснить вывов при defer tryTest()()
// Мы откладываем выолнение возвращаемой функции и выполняем на месте tryTest ф-ию
// 2. Объяснить вывод при defer tryTest()
// мы откладываем вызов ф-ии tryTest. Возвращаемая анонимная ф-ия не вызывается

func tryTest() func() {
	fmt.Println("tryTest")
	return func() {
		fmt.Println("tryTest2")
	}
}

func main() {
	defer fmt.Println("Первое время:", time.Now())
	defer tryTest()()
	time.Sleep(2 * time.Second)
	defer fmt.Println("Второе время", time.Now())
}

// 1) Первое время с вычисленным аргументом - 1-ая на стеке вызовов
// 2) ()() - tryTest, внешняя выполнена, возвращённая внутренняя анонимная отложена 2-ой на стеке
// 3) блокируем исполнение программы ожиданием
// 4) откладываем выполнение "второго времени" с вычисленным аргументом 3-им на стеке
// Исполняется то, что было отложено на стек. LIFO
